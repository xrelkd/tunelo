#!/usr/bin/env bash

# reference from bitnami

# Constants
RESET='\033[0m'
RED='\033[38;5;1m'
GREEN='\033[38;5;2m'
YELLOW='\033[38;5;3m'
MAGENTA='\033[38;5;5m'
CYAN='\033[38;5;6m'

stderr_print() {
  local bool="${QUIET:-false}"
  # comparison is performed without regard to the case of alphabetic characters
  shopt -s nocasematch
  if ! [[ "$bool" = 1 || "$bool" =~ ^(yes|true)$ ]]; then
    printf "%b\\n" "${*}" >&2
  fi
}

log() {
  stderr_print "${CYAN}${MODULE:-} ${MAGENTA}$(date "+%T.%2N ")${RESET}${*}"
}

info() {
  log "${GREEN}INFO ${RESET} ==> ${*}"
}

warn() {
  log "${YELLOW}WARN ${RESET} ==> ${*}"
}

error() {
  log "${RED}ERROR${RESET} ==> ${*}"
}

debug() {
  # 'is_boolean_yes' is defined in libvalidations.sh, but depends on this file so we cannot source it
  local bool="${DEBUG:-true}"
  # comparison is performed without regard to the case of alphabetic characters
  shopt -s nocasematch
  if [[ "$bool" = 1 || "$bool" =~ ^(yes|true)$ ]]; then
    log "${MAGENTA}DEBUG${RESET} ==> ${*}"
  fi
}

indent() {
  local string="${1:-}"
  local num="${2:?missing num}"
  local char="${3:-" "}"
  # Build the indentation unit string
  local indent_unit=""
  for ((i = 0; i < num; i++)); do
    indent_unit="${indent_unit}${char}"
  done
  # shellcheck disable=SC2001
  # Complex regex, see https://github.com/koalaman/shellcheck/wiki/SC2001#exceptions
  echo "$string" | sed "s/^/${indent_unit}/"
}
